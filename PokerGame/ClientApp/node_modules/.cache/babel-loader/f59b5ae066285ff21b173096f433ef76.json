{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Haley\\\\Desktop\\\\PokerGameReact\\\\PokerGame\\\\PokerGame\\\\ClientApp\\\\src\\\\components\\\\FetchData.js\";\nimport React, { Component } from 'react';\nexport class FetchData extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      players: [],\n      loading: true\n    };\n  }\n\n  componentDidMount() {\n    this.populateWeatherData();\n  }\n\n  static renderForecastsTable(players) {\n    return /*#__PURE__*/React.createElement(\"table\", {\n      className: \"table table-striped\",\n      \"aria-labelledby\": \"tabelLabel\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"thead\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 13\n      }\n    }, \"Player Name\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 13\n      }\n    }, \"Card 1\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 13\n      }\n    }, \"Card 2\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 13\n      }\n    }, \"Card 3\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 13\n      }\n    }, \"Card 4\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 13\n      }\n    }, \"Card 5\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 13\n      }\n    }, players.map(player => /*#__PURE__*/React.createElement(\"tr\", {\n      key: player.playerName,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 21\n      }\n    }, player.cards.map(card => /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 29\n      }\n    }, card.CardSuit, \" \", card.cardNumber))))));\n  }\n\n  render() {\n    let contents = this.state.loading ? /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"em\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 12\n      }\n    }, \"Loading...\")) : FetchData.renderForecastsTable(this.state.players);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      id: \"tabelLabel\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }\n    }, \"Poker Game\"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }\n    }, \"This component demonstrates fetching data from the server.\"), contents);\n  }\n\n  async populateWeatherData() {\n    const response = await fetch('weatherforecast');\n    debugger;\n    const data = await response.json();\n    this.setState({\n      players: data,\n      loading: false\n    });\n  }\n\n}\nFetchData.displayName = FetchData.name;","map":{"version":3,"sources":["C:/Users/Haley/Desktop/PokerGameReact/PokerGame/PokerGame/ClientApp/src/components/FetchData.js"],"names":["React","Component","FetchData","constructor","props","state","players","loading","componentDidMount","populateWeatherData","renderForecastsTable","map","player","playerName","cards","card","CardSuit","cardNumber","render","contents","response","fetch","data","json","setState","displayName","name"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,OAAO,MAAMC,SAAN,SAAwBD,SAAxB,CAAkC;AAGvCE,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AAAEC,MAAAA,OAAO,EAAE,EAAX;AAAeC,MAAAA,OAAO,EAAE;AAAxB,KAAb;AACD;;AAEDC,EAAAA,iBAAiB,GAAG;AAClB,SAAKC,mBAAL;AACD;;AAED,SAAOC,oBAAP,CAA4BJ,OAA5B,EAAqC;AACnC,wBACE;AAAO,MAAA,SAAS,EAAC,qBAAjB;AAAuC,yBAAgB,YAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJF,eAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBALF,eAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBANF,CADF,CADF,eAWM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKA,OAAO,CAACK,GAAR,CAAYC,MAAM,iBACf;AAAI,MAAA,GAAG,EAAEA,MAAM,CAACC,UAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKD,MAAM,CAACE,KAAP,CAAaH,GAAb,CAAiBI,IAAI,iBAClB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKA,IAAI,CAACC,QAAV,OAAqBD,IAAI,CAACE,UAA1B,CADH,CADL,CADH,CADL,CAXN,CADF;AAuBD;;AAEDC,EAAAA,MAAM,GAAG;AACP,QAAIC,QAAQ,GAAG,KAAKd,KAAL,CAAWE,OAAX,gBACX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAH,CADW,GAEXL,SAAS,CAACQ,oBAAV,CAA+B,KAAKL,KAAL,CAAWC,OAA1C,CAFJ;AAIA,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAI,MAAA,EAAE,EAAC,YAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oEAFF,EAGGa,QAHH,CADF;AAOD;;AAEC,QAAMV,mBAAN,GAA4B;AACxB,UAAMW,QAAQ,GAAG,MAAMC,KAAK,CAAC,iBAAD,CAA5B;AACA;AAEJ,UAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAnB;AACA,SAAKC,QAAL,CAAc;AAAElB,MAAAA,OAAO,EAAEgB,IAAX;AAAiBf,MAAAA,OAAO,EAAE;AAA1B,KAAd;AACD;;AA1DsC;AAA5BL,S,CACJuB,W,GAAcvB,SAAS,CAACwB,I","sourcesContent":["import React, { Component } from 'react';\r\n\r\nexport class FetchData extends Component {\r\n  static displayName = FetchData.name;\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { players: [], loading: true };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.populateWeatherData();\r\n  }\r\n\r\n  static renderForecastsTable(players) {\r\n    return (\r\n      <table className='table table-striped' aria-labelledby=\"tabelLabel\">\r\n        <thead>\r\n          <tr>\r\n            <th>Player Name</th>\r\n            <th>Card 1</th>\r\n            <th>Card 2</th>\r\n            <th>Card 3</th>\r\n            <th>Card 4</th>\r\n            <th>Card 5</th>\r\n          </tr>\r\n        </thead>\r\n            <tbody>\r\n                {players.map(player =>\r\n                    <tr key={player.playerName}>\r\n                        {player.cards.map(card =>\r\n                            <tr>{card.CardSuit} {card.cardNumber}</tr>)}\r\n\r\n                    </tr>\r\n                )}\r\n            </tbody>\r\n      </table>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    let contents = this.state.loading\r\n      ? <p><em>Loading...</em></p>\r\n      : FetchData.renderForecastsTable(this.state.players);\r\n\r\n    return (\r\n      <div>\r\n        <h1 id=\"tabelLabel\" >Poker Game</h1>\r\n        <p>This component demonstrates fetching data from the server.</p>\r\n        {contents}\r\n      </div>\r\n    );\r\n  }\r\n\r\n    async populateWeatherData() {\r\n        const response = await fetch('weatherforecast');\r\n        debugger;\r\n\r\n    const data = await response.json();\r\n    this.setState({ players: data, loading: false });\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}